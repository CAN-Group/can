version: "3.8"

services:

  scraper:
    build:
      context: scraper
    depends_on:
      - database
    image: can/scraper:latest
    environment:
      DB_CONNECTION_URI: postgresql://postgres:$POSTGRES_PASSWORD@database:5432/can
    restart: always
    links:
      - "database"

  backend:
    build:
      context: flask-app
    depends_on:
      - router
      - database
    image: can/flask-app:latest
    environment:
      ROUTING_APP_URL: http://router:17777/brouter
      DB_CONNECTION_URI: postgresql://postgres:$POSTGRES_PASSWORD@database:5432/can
    restart: always
    ports:
      - ${BACKEND_PORT}:8080
    links:
      - "router"
      - "database"

  router:
    build:
      context: brouter
    image: can/brouter:latest
    volumes:
      - router-segments:/app/segments
    restart: always

  database:
    image: postgres:13-alpine
    environment:
      POSTGRES_PASSWORD:
      POSTGRES_DB: can
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: always

volumes:
  router-segments:
  db-data:
