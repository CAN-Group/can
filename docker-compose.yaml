version: "3.8"

services:
  frontend:
    build:
      context: can-frontend
    depends_on:
      - backend
    image: can/frontend:dev
    restart: always
    ports:
      - 3000:3000
    links:
      - "backend"
    environment:
      - REACT_APP_BACKEND_ADDRESS=$ADDRESS
      - REACT_APP_BACKEND_PORT=$BACKEND_PORT

  scraper:
    build:
      context: scraper
    depends_on:
      - database
    image: can/scraper:dev
    environment:
      DB_CONNECTION_URI: postgresql://postgres:$POSTGRES_PASSWORD@database:5432/can
    restart: always
    links:
      - "database"

  backend:
    build:
      context: flask-app
    depends_on:
      - router
      - database
    image: can/flask-app:dev
    environment:
      ROUTING_APP_URL: http://router:17777/brouter
      DB_CONNECTION_URI: postgresql://postgres:$POSTGRES_PASSWORD@database:5432/can
    restart: always
    ports:
      - 5000:8080
    links:
      - "router"
      - "database"

  router:
    build:
      context: brouter
    image: can/brouter:dev
    volumes:
      - router-segments:/app/segments
    restart: always
    cpu_count: 4
    cpu_shares: 2048
    ports:
      - 17777:17777

  database:
    image: postgres:13-alpine
    environment:
      POSTGRES_PASSWORD:
      POSTGRES_DB: can
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: always
    ports:
      - 5432:5432

volumes:
  router-segments:
  db-data:
